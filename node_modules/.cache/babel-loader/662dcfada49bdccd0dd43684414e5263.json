{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\REACT\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\contactForm\\\\contactForm.js\";\nimport s from \"./contactForm.module.css\";\nimport propTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        number\n      } = this.state;\n      const newObject = {\n        name: name,\n        number: number,\n        id: nanoid()\n      };\n      this.props.data(newObject);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    let nameId = nanoid();\n    let numberId = nanoid();\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_label,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"text\",\n          name: \"name\",\n          id: nameId,\n          value: this.state.name,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.contacts_label,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.input,\n          type: \"tel\",\n          name: \"number\",\n          id: numberId,\n          value: this.state.number,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContactForm;\nContactForm.propTypes = {\n  data: propTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/GidHub Progects/REACT/goit-react-hw-03-phonebook/src/components/contactForm/contactForm.js"],"names":["s","propTypes","React","Component","nanoid","ContactForm","state","name","number","handleChange","event","value","currentTarget","setState","handleSubmit","e","preventDefault","newObject","id","props","data","render","nameId","numberId","contacts_label","input","func","isRequired"],"mappings":"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","sourcesContent":["import s from \"./contactForm.module.css\";\r\nimport propTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value});\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newObject = { name: name, number: number , id:nanoid()};\r\n    this.props.data(newObject);\r\n\r\n    this.setState({ name: '',number: ''});\r\n  };\r\n\r\n  render() {\r\n    let nameId = nanoid();\r\n    let numberId = nanoid();\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label className={s.contacts_label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id={nameId}\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label className={s.contacts_label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            id={numberId}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  data: propTypes.func.isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}