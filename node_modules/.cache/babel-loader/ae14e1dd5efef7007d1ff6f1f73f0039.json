{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\REACT\\\\goit-react-hw-03-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"./contactForm\";\nimport Filter from \"./filter\";\nimport ContactList from \"./contactList\";\nimport s from \"./contactForm/contactForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Eden Fahov',\n        number: '666-66-66'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.handleFilteredItems = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.accumulateContacts = data => {\n      if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\n        alert(`${data.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(_ref => {\n        let {\n          contacts\n        } = _ref;\n        return {\n          contacts: [data, ...contacts]\n        };\n      });\n    };\n\n    this.filteredItems = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contscts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  render() {\n    const contacts = this.filteredItems();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        data: this.accumulateContacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        eventHandler: this.handleFilteredItems,\n        options: this.state.filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        onDeleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["D:/GidHub Progects/REACT/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","Component","ContactForm","Filter","ContactList","s","App","state","contacts","id","name","number","filter","handleFilteredItems","event","setState","currentTarget","value","accumulateContacts","data","find","contact","toLowerCase","alert","filteredItems","normalizedFilter","includes","deleteContact","contactId","prevState","componentDidMount","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","nextContacts","prevContacts","contscts","setItem","stringify","render","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,sCAAd;;;AAEE,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACNC,MAAAA,QAAQ,EAAE,CACV;AAACC,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,YAAnB;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OADU,EAEV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,gBAAnB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAFU,EAGV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,eAAnB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAHU,EAIV;AAACF,QAAAA,EAAE,EAAE,MAAL;AAAaC,QAAAA,IAAI,EAAE,gBAAnB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAJU,CADJ;AAONC,MAAAA,MAAM,EAAE;AAPF,KADoB;;AAAA,SA6B1BC,mBA7B0B,GA6BJC,KAAK,IAAI;AAC7B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,KAAK,CAACE,aAAN,CAAoBC;AAA9B,OAAd;AACD,KA/ByB;;AAAA,SAiC9BC,kBAjC8B,GAiCTC,IAAI,IAAI;AACzB,UAAI,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,IAApB,CAAyBC,OAAO,IAAIA,OAAO,CAACX,IAAR,CAAaY,WAAb,OAA+BH,IAAI,CAACT,IAAL,CAAUY,WAAV,EAAnE,CAAJ,EAAiG;AAC/FC,QAAAA,KAAK,CAAE,GAAEJ,IAAI,CAACT,IAAK,yBAAd,CAAL;AACA;AACD;;AACD,WAAKK,QAAL,CAAc;AAAA,YAAC;AAAEP,UAAAA;AAAF,SAAD;AAAA,eAAmB;AAC/BA,UAAAA,QAAQ,EAAE,CAACW,IAAD,EAAO,GAAGX,QAAV;AADqB,SAAnB;AAAA,OAAd;AAGC,KAzCyB;;AAAA,SA2C5BgB,aA3C4B,GA2CZ,MAAM;AACpB,YAAM;AAAEZ,QAAAA,MAAF;AAAUJ,QAAAA;AAAV,UAAuB,KAAKD,KAAlC;AACA,YAAMkB,gBAAgB,GAAGb,MAAM,CAACU,WAAP,EAAzB;AACA,aAAOd,QAAQ,CAACI,MAAT,CAAgBS,OAAO,IAC5BA,OAAO,CAACX,IAAR,CAAaY,WAAb,GAA2BI,QAA3B,CAAoCD,gBAApC,CADK,CAAP;AAGC,KAjDyB;;AAAA,SAmD1BE,aAnD0B,GAmDVC,SAAS,IAAI;AAC7B,WAAKb,QAAL,CAAcc,SAAS,KAAK;AAC1BrB,QAAAA,QAAQ,EAAEqB,SAAS,CAACrB,QAAV,CAAmBI,MAAnB,CAA0BS,OAAO,IAAIA,OAAO,CAACZ,EAAR,KAAemB,SAApD;AADgB,OAAL,CAAvB;AAGC,KAvDyB;AAAA;;AAW1BE,EAAAA,iBAAiB,GAAE;AACjB,UAAMtB,QAAQ,GAAGuB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAW3B,QAAX,CAAvB;;AAEA,QAAIyB,cAAJ,EAAoB;AAClB,WAAKlB,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEyB;AAAZ,OAAd;AACD;AACF;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYR,SAAZ,EAAuB;AACvC,UAAMS,YAAY,GAAG,KAAK/B,KAAL,CAAWC,QAAhC;AACA,UAAM+B,YAAY,GAAGV,SAAS,CAACW,QAA/B;;AAEA,QAAIF,YAAY,KAAKC,YAArB,EAAmC;AACjCR,MAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeJ,YAAf,CAAjC;AACD;AACF;;AA8BDK,EAAAA,MAAM,GAAG;AACT,UAAMnC,QAAQ,GAAG,KAAKgB,aAAL,EAAjB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEnB,CAAC,CAACuC,SAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAK1B;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKL,mBAA3B;AAAgD,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWK;AAApE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,WAAD;AACE,QAAA,QAAQ,EAAEJ,QADZ;AAEE,QAAA,eAAe,EAAE,KAAKmB;AAFxB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYC;;AAvEyB;;AAwE7B;AAED,eAAerB,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ContactForm from \"./contactForm\";\r\nimport Filter from \"./filter\";\r\nimport ContactList from \"./contactList\";\r\nimport s from \"./contactForm/contactForm.module.css\";\r\n\r\n  class App extends Component {\r\n  state = {\r\n    contacts: [\r\n    {id: 'id-1', name: 'Eden Fahov', number: '666-66-66'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n    };\r\n\r\n    componentDidMount(){\r\n      const contacts = localStorage.getItem('contacts');\r\n      const parsedContacts = JSON.parse(contacts);\r\n\r\n      if (parsedContacts) {\r\n        this.setState({ contacts: parsedContacts });\r\n      }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      const nextContacts = this.state.contacts;\r\n      const prevContacts = prevState.contscts;\r\n\r\n      if (nextContacts !== prevContacts) {\r\n        localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n      }\r\n    }\r\n\r\n    handleFilteredItems = event => {\r\n      this.setState({ filter: event.currentTarget.value })\r\n    };\r\n\r\naccumulateContacts = data => {\r\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase())) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n    }));\r\n    };\r\n\r\n  filteredItems = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    )\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n    };\r\n  \r\n    render() {\r\n    const contacts = this.filteredItems();\r\n    return (\r\n      <div className={s.container}>\r\n        <h2>Phonebook</h2>\r\n        <ContactForm data={this.accumulateContacts} />\r\n        <h2>Contacts</h2>\r\n        <Filter eventHandler={this.handleFilteredItems} options={this.state.filter}/>\r\n        <ContactList\r\n          contacts={contacts}\r\n          onDeleteContact={this.deleteContact}>\r\n        </ContactList>\r\n      </div>\r\n    )\r\n    };\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}